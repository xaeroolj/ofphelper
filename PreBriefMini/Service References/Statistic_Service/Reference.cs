//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PreBriefMini.Statistic_Service {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="Statistic_Service.Statistic_Service")]
    public interface Statistic_Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Statistic_Service/GetServerTime", ReplyAction="urn:Statistic_Service/GetServerTimeResponse")]
        System.DateTime GetServerTime();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Statistic_Service/GetServerTime", ReplyAction="urn:Statistic_Service/GetServerTimeResponse")]
        System.IAsyncResult BeginGetServerTime(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetServerTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Statistic_Service/AddLog", ReplyAction="urn:Statistic_Service/AddLogResponse")]
        string AddLog(string logString);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Statistic_Service/AddLog", ReplyAction="urn:Statistic_Service/AddLogResponse")]
        System.IAsyncResult BeginAddLog(string logString, System.AsyncCallback callback, object asyncState);
        
        string EndAddLog(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Statistic_ServiceChannel : PreBriefMini.Statistic_Service.Statistic_Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServerTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServerTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Statistic_ServiceClient : System.ServiceModel.ClientBase<PreBriefMini.Statistic_Service.Statistic_Service>, PreBriefMini.Statistic_Service.Statistic_Service {
        
        private BeginOperationDelegate onBeginGetServerTimeDelegate;
        
        private EndOperationDelegate onEndGetServerTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetServerTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddLogDelegate;
        
        private EndOperationDelegate onEndAddLogDelegate;
        
        private System.Threading.SendOrPostCallback onAddLogCompletedDelegate;
        
        public Statistic_ServiceClient() {
        }
        
        public Statistic_ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Statistic_ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Statistic_ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Statistic_ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetServerTimeCompletedEventArgs> GetServerTimeCompleted;
        
        public event System.EventHandler<AddLogCompletedEventArgs> AddLogCompleted;
        
        public System.DateTime GetServerTime() {
            return base.Channel.GetServerTime();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetServerTime(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServerTime(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndGetServerTime(System.IAsyncResult result) {
            return base.Channel.EndGetServerTime(result);
        }
        
        private System.IAsyncResult OnBeginGetServerTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetServerTime(callback, asyncState);
        }
        
        private object[] OnEndGetServerTime(System.IAsyncResult result) {
            System.DateTime retVal = this.EndGetServerTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServerTimeCompleted(object state) {
            if ((this.GetServerTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServerTimeCompleted(this, new GetServerTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServerTimeAsync() {
            this.GetServerTimeAsync(null);
        }
        
        public void GetServerTimeAsync(object userState) {
            if ((this.onBeginGetServerTimeDelegate == null)) {
                this.onBeginGetServerTimeDelegate = new BeginOperationDelegate(this.OnBeginGetServerTime);
            }
            if ((this.onEndGetServerTimeDelegate == null)) {
                this.onEndGetServerTimeDelegate = new EndOperationDelegate(this.OnEndGetServerTime);
            }
            if ((this.onGetServerTimeCompletedDelegate == null)) {
                this.onGetServerTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServerTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetServerTimeDelegate, null, this.onEndGetServerTimeDelegate, this.onGetServerTimeCompletedDelegate, userState);
        }
        
        public string AddLog(string logString) {
            return base.Channel.AddLog(logString);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddLog(string logString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddLog(logString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndAddLog(System.IAsyncResult result) {
            return base.Channel.EndAddLog(result);
        }
        
        private System.IAsyncResult OnBeginAddLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string logString = ((string)(inValues[0]));
            return this.BeginAddLog(logString, callback, asyncState);
        }
        
        private object[] OnEndAddLog(System.IAsyncResult result) {
            string retVal = this.EndAddLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddLogCompleted(object state) {
            if ((this.AddLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddLogCompleted(this, new AddLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddLogAsync(string logString) {
            this.AddLogAsync(logString, null);
        }
        
        public void AddLogAsync(string logString, object userState) {
            if ((this.onBeginAddLogDelegate == null)) {
                this.onBeginAddLogDelegate = new BeginOperationDelegate(this.OnBeginAddLog);
            }
            if ((this.onEndAddLogDelegate == null)) {
                this.onEndAddLogDelegate = new EndOperationDelegate(this.OnEndAddLog);
            }
            if ((this.onAddLogCompletedDelegate == null)) {
                this.onAddLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddLogCompleted);
            }
            base.InvokeAsync(this.onBeginAddLogDelegate, new object[] {
                        logString}, this.onEndAddLogDelegate, this.onAddLogCompletedDelegate, userState);
        }
    }
}
