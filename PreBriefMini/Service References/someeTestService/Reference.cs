//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PreBriefMini.someeTestService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestService.dbItemss", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class TestServicedbItemss : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DatetimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Datetime {
            get {
                return this.DatetimeField;
            }
            set {
                if ((this.DatetimeField.Equals(value) != true)) {
                    this.DatetimeField = value;
                    this.RaisePropertyChanged("Datetime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Flight {
            get {
                return this.FlightField;
            }
            set {
                if ((object.ReferenceEquals(this.FlightField, value) != true)) {
                    this.FlightField = value;
                    this.RaisePropertyChanged("Flight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="someeTestService.TestService")]
    public interface TestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TestService/GetServerTIme", ReplyAction="urn:TestService/GetServerTImeResponse")]
        string GetServerTIme();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TestService/GetServerTIme", ReplyAction="urn:TestService/GetServerTImeResponse")]
        System.IAsyncResult BeginGetServerTIme(System.AsyncCallback callback, object asyncState);
        
        string EndGetServerTIme(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TestService/sqlTest", ReplyAction="urn:TestService/sqlTestResponse")]
        PreBriefMini.someeTestService.TestServicedbItemss[] sqlTest();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TestService/sqlTest", ReplyAction="urn:TestService/sqlTestResponse")]
        System.IAsyncResult BeginsqlTest(System.AsyncCallback callback, object asyncState);
        
        PreBriefMini.someeTestService.TestServicedbItemss[] EndsqlTest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TestService/addCHG", ReplyAction="urn:TestService/addCHGResponse")]
        void addCHG(string message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:TestService/addCHG", ReplyAction="urn:TestService/addCHGResponse")]
        System.IAsyncResult BeginaddCHG(string message, System.AsyncCallback callback, object asyncState);
        
        void EndaddCHG(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TestServiceChannel : PreBriefMini.someeTestService.TestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetServerTImeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetServerTImeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class sqlTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public sqlTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PreBriefMini.someeTestService.TestServicedbItemss[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PreBriefMini.someeTestService.TestServicedbItemss[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestServiceClient : System.ServiceModel.ClientBase<PreBriefMini.someeTestService.TestService>, PreBriefMini.someeTestService.TestService {
        
        private BeginOperationDelegate onBeginGetServerTImeDelegate;
        
        private EndOperationDelegate onEndGetServerTImeDelegate;
        
        private System.Threading.SendOrPostCallback onGetServerTImeCompletedDelegate;
        
        private BeginOperationDelegate onBeginsqlTestDelegate;
        
        private EndOperationDelegate onEndsqlTestDelegate;
        
        private System.Threading.SendOrPostCallback onsqlTestCompletedDelegate;
        
        private BeginOperationDelegate onBeginaddCHGDelegate;
        
        private EndOperationDelegate onEndaddCHGDelegate;
        
        private System.Threading.SendOrPostCallback onaddCHGCompletedDelegate;
        
        public TestServiceClient() {
        }
        
        public TestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetServerTImeCompletedEventArgs> GetServerTImeCompleted;
        
        public event System.EventHandler<sqlTestCompletedEventArgs> sqlTestCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> addCHGCompleted;
        
        public string GetServerTIme() {
            return base.Channel.GetServerTIme();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetServerTIme(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetServerTIme(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetServerTIme(System.IAsyncResult result) {
            return base.Channel.EndGetServerTIme(result);
        }
        
        private System.IAsyncResult OnBeginGetServerTIme(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetServerTIme(callback, asyncState);
        }
        
        private object[] OnEndGetServerTIme(System.IAsyncResult result) {
            string retVal = this.EndGetServerTIme(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetServerTImeCompleted(object state) {
            if ((this.GetServerTImeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetServerTImeCompleted(this, new GetServerTImeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetServerTImeAsync() {
            this.GetServerTImeAsync(null);
        }
        
        public void GetServerTImeAsync(object userState) {
            if ((this.onBeginGetServerTImeDelegate == null)) {
                this.onBeginGetServerTImeDelegate = new BeginOperationDelegate(this.OnBeginGetServerTIme);
            }
            if ((this.onEndGetServerTImeDelegate == null)) {
                this.onEndGetServerTImeDelegate = new EndOperationDelegate(this.OnEndGetServerTIme);
            }
            if ((this.onGetServerTImeCompletedDelegate == null)) {
                this.onGetServerTImeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetServerTImeCompleted);
            }
            base.InvokeAsync(this.onBeginGetServerTImeDelegate, null, this.onEndGetServerTImeDelegate, this.onGetServerTImeCompletedDelegate, userState);
        }
        
        public PreBriefMini.someeTestService.TestServicedbItemss[] sqlTest() {
            return base.Channel.sqlTest();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginsqlTest(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginsqlTest(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public PreBriefMini.someeTestService.TestServicedbItemss[] EndsqlTest(System.IAsyncResult result) {
            return base.Channel.EndsqlTest(result);
        }
        
        private System.IAsyncResult OnBeginsqlTest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginsqlTest(callback, asyncState);
        }
        
        private object[] OnEndsqlTest(System.IAsyncResult result) {
            PreBriefMini.someeTestService.TestServicedbItemss[] retVal = this.EndsqlTest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnsqlTestCompleted(object state) {
            if ((this.sqlTestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.sqlTestCompleted(this, new sqlTestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void sqlTestAsync() {
            this.sqlTestAsync(null);
        }
        
        public void sqlTestAsync(object userState) {
            if ((this.onBeginsqlTestDelegate == null)) {
                this.onBeginsqlTestDelegate = new BeginOperationDelegate(this.OnBeginsqlTest);
            }
            if ((this.onEndsqlTestDelegate == null)) {
                this.onEndsqlTestDelegate = new EndOperationDelegate(this.OnEndsqlTest);
            }
            if ((this.onsqlTestCompletedDelegate == null)) {
                this.onsqlTestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnsqlTestCompleted);
            }
            base.InvokeAsync(this.onBeginsqlTestDelegate, null, this.onEndsqlTestDelegate, this.onsqlTestCompletedDelegate, userState);
        }
        
        public void addCHG(string message) {
            base.Channel.addCHG(message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginaddCHG(string message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginaddCHG(message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndaddCHG(System.IAsyncResult result) {
            base.Channel.EndaddCHG(result);
        }
        
        private System.IAsyncResult OnBeginaddCHG(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string message = ((string)(inValues[0]));
            return this.BeginaddCHG(message, callback, asyncState);
        }
        
        private object[] OnEndaddCHG(System.IAsyncResult result) {
            this.EndaddCHG(result);
            return null;
        }
        
        private void OnaddCHGCompleted(object state) {
            if ((this.addCHGCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.addCHGCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void addCHGAsync(string message) {
            this.addCHGAsync(message, null);
        }
        
        public void addCHGAsync(string message, object userState) {
            if ((this.onBeginaddCHGDelegate == null)) {
                this.onBeginaddCHGDelegate = new BeginOperationDelegate(this.OnBeginaddCHG);
            }
            if ((this.onEndaddCHGDelegate == null)) {
                this.onEndaddCHGDelegate = new EndOperationDelegate(this.OnEndaddCHG);
            }
            if ((this.onaddCHGCompletedDelegate == null)) {
                this.onaddCHGCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnaddCHGCompleted);
            }
            base.InvokeAsync(this.onBeginaddCHGDelegate, new object[] {
                        message}, this.onEndaddCHGDelegate, this.onaddCHGCompletedDelegate, userState);
        }
    }
}
